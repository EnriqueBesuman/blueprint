blueprint:
  name: MIO - Control of closing or opening doors or/and windows
  description: "# Control of closing or opening doors and windows.\n\nFacilitates
    the execution of actions in the following cases:\n - When the doors or windows is opened
    (it is possible to delay the action **x seconds**).\n - While the doors
    or windows remains open (in **x minute** intervals).\n - When the doors
    or windows closes (it is possible to delay the action **x seconds**).\n"
  source_url: https://github.com/EnriqueBesuman/blueprints/blob/main/door_and_window_control.yaml
  domain: automation
  input:
    dispositivo:
      name: Doors and Windows
      description: "`required`\n\n Door or Window to control"
      selector:
        entity:
          multiple: false
          filter:
          - domain:
            - binary_sensor
            device_class:
            - window
          - domain:
            - binary_sensor
            device_class:
            - door
          - domain:
            - binary_sensor
            device_class:
            - garage_door
    retraso_abrir:
      name: Delay opening
      description: "`optional`\n\n Waiting time **in seconds**, from opening
        the door or window, until the action is executed"
      default: 0
      selector:
        number:
          min: 0.0
          max: 120.0
          unit_of_measurement: seconds
          mode: box
          step: 1.0
    accion_abrir:
      name: Opening actions
      description: "`optional`\n\n Actions to be executed when the doors or/and windows is opened.\n\n
        For notification-type actions, the following variables are availables to compose the body of the message:\n\n 
        - ***{{ open_delay }}***: Waiting time **in seconds**, from when the door or window is opened,
        until the action is executed.\n - ***{{ close_delay }}***: Timeout
        **in seconds**, from the moment the door or window is closed, until the action is executed.\n 
        - ***{{ repetition_interval }}***: Interval **in minutes** between actions when the door or window remains open.\n"
      default: []
      selector:
        action: {}
    aviso_repetitivo:
      name: Execute recursive action while the door or window is open
      description: "`required`\n\n Execute action every x time while the door or window remains open."
      default: false
      selector:
        boolean: {}
    intervalo_repeticion:
      name: Interval between actions
      description: "`optional`\n\n Interval **in minutes** between actions, when the door or window remains open."
      default: 5
      selector:
        number:
          min: 1.0
          max: 120.0
          unit_of_measurement: minutes
          mode: box
          step: 1.0
    accion_repeticion:
      name: Actions in each repetition
      description: "`optional`\n\n Actions to be executed while the door or window
        remains open.\n\nFor notification-type actions, they are availables
        the following variables to compose the body of the message:\n\n - ***{{
        open_delay }}***: Waiting time **in seconds**, from when the door or window is opened,
        until the action is executed.\n - ***{{ close_delay }}***: Time
        waiting time **in seconds**, from when the door or window is closed, until
        executes the action.\n - ***{{ repetition_interval }}***: Interval **in minutes**
        between actions, when the door or window remains open.\n - ***{{ open_time
        }}***: Total time **in minutes** since the door was opened or
        window (not counting the delay in seconds when opening...)."
      default: []
      selector:
        action: {}
    retraso_cerrar:
      name: Delay closing
      description: "`opcional`\n\n Waiting time **in seconds**, from closing
        the door or window, until the action is executed."
      default: 0
      selector:
        number:
          min: 0.0
          max: 120.0
          unit_of_measurement: seconds
          mode: box
          step: 1.0
    accion_cerrar:
      name: Closing actions
      description: "`opcional`\n\n Actions to be executed when the doors or/and windows is closed.\n\n
        For notification-type actions, the following variables are availables to compose the body of the message:\n\n 
        - ***{{ open_delay }}***: Waiting time **in seconds**, from when the door or window is opened,
        until the action is executed.\n - ***{{ close_delay }}***: Timeout
        **in seconds**, from the moment the door or window is closed, until the action is executed.\n 
        - ***{{ repetition_interval }}***: Interval **in minutes** between actions when the door or window remains open.\n"
      default: []
      selector:
        action: {}
variables:
  accion_abrir: !input accion_abrir
  accion_cerrar: !input accion_cerrar
  accion_repeticion: !input accion_repeticion
  aviso_repetitivo: !input aviso_repetitivo
  retraso_abrir: !input retraso_abrir
  retraso_cerrar: !input retraso_cerrar
  intervalo_repeticion: !input intervalo_repeticion
trigger:
- id: abierta
  platform: state
  entity_id: !input dispositivo
  from: 'off'
  to: 'on'
  for: !input retraso_abrir
- id: cerrada
  platform: state
  entity_id: !input dispositivo
  from: 'on'
  to: 'off'
  for: !input retraso_cerrar
condition: []
action:
- choose:
  - alias: Puerta o ventana abierta
    conditions:
      condition: trigger
      id: abierta
    sequence:
    - choose:
      - alias: Ver si aviso puerta abierta
        conditions:
          condition: template
          value_template: '{{ accion_abrir is defined and accion_abrir|length > 0
            }}

            '
        sequence: !input accion_abrir
    - choose:
      - alias: Si aviso repetitido
        conditions:
          condition: template
          value_template: '{{ aviso_repetitivo }}

            '
        sequence:
        - alias: Esperamos a que se cierre la puerta o ventana a intervalos de x minutos
          repeat:
            sequence:
            - wait_for_trigger:
              - platform: state
                entity_id: !input dispositivo
                to: 'off'
              timeout:
                minutes: !input intervalo_repeticion
            - variables:
                tiempo_abierta: "{{ (intervalo_repeticion |int(0) * repeat.index |int(0))
                  }}  \n"
            - if:
              - alias: Si pasa el intervalo y aÃºn no se ha cerrado la puerta o ventana
                condition: state
                entity_id: !input dispositivo
                state: 'on'
              then:
              - choose:
                  conditions:
                    condition: template
                    value_template: '{{ accion_repeticion is defined and accion_repeticion|length
                      > 0 }}

                      '
                  sequence: !input accion_repeticion
            until:
            - condition: state
              entity_id: !input dispositivo
              state: 'off'
- choose:
  - alias: Puerta o ventana cerrada
    conditions:
      condition: state
      entity_id: !input dispositivo
      state: 'off'
    sequence:
    - choose:
        conditions:
          condition: template
          value_template: '{{ accion_cerrar is defined and accion_cerrar|length >
            0 }}

            '
        sequence: !input accion_cerrar
mode: single
