blueprint:
  name: MIO - Control de Luces
  description: "Enciende y apaga Luces en función de los siguientes supuestos:\n\n
    > - Cuando se activa un **Sensor Binario** (y según un desfase de tiempo opcional).\n
    > - Y/o Cuando **Amanece o Anochece** (también según un desfase de tiempo opcional, y el
    modo de funcionamiento **Diurno o Nocturno**).\n
    > - Y/o Cuando se lee una etiqueta NFC (también según un desfase de tiempo opcional, y el
    modo de funcionamiento **Diurno o Nocturno**).\n
    > - Según un determinado nivel de **luminosidad** (aplica en cualquiera de los casos anteriores).\n\n\n
    **Version**: 1.0.0\n\n**Documentación:** Estamos trabajando en ello, pero creo que es bastante auto-explicativo..."
  domain: automation
  source_url: https://github.com/EnriqueBesuman/blueprints/blob/main/castellano/light_control.yaml


  input:
    luces:
      name: Luces
      description: "`required`\n\n
        Luces que se encenderán o apagarán."
      selector:
        entity:
          multiple: true
          filter:
          - domain:
            - light


    modo_sensor:
      name: Activar el **Modo Sensor**.
      description: "`required`\n\n 
        Enciende y apaga las luces, según el activador **Sensor Binario** seleccionado."
      default: false
      selector:
        boolean: {}
    activador:
      name: Activador
      description: ">`optional`\n\n
        >Sensor Binario que apaga o enciende las luces según su estado.
        >OBLIGATORIO SI SE ACTIVA EL **MODO SENSOR**."
      default: []
      selector:
        entity:
          multiple: false
          filter:
          - domain:
            - binary_sensor
    solo_noche_sensor:
      name: Solo por la noche
      description: ">`optional`\n\n 
        >Enciende y apaga las luces, únicamente por la noche.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO SENSOR**."
      default: false
      selector:
        boolean: {}
    espera_sensor:
      name: "Espera encendidas"
      description: ">`optional`\n\n 
        >Tiempo que permanecen encendidas las luces desde la última **desactivación** del sensor.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO SENSOR**."
      default: 00:01:00


    modo_natural:
      name: Activar el modo **Anochecer Amanecer**.
      description: "`required`\n\n 
        Enciende y/o apaga las luces, después del anochecer y antes del amanecer."
      default: false
      selector:
        boolean: {}
    modo:
      name: Modo de funcionamiento
      description: ">`optional`\n\n 
        >En modo diurno, se encederán las luces al amanecer y se apagarán al anochecer.\n 
        >En modo nocturno, se encenderan las luces al anochecer, y se apagarán al amanecer.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO NATURAL**."
      default: diurno
      selector:
        select:
          options:
          - label: diurno
            value: dia
          - label: nocturno
            value: noche
          multiple: false
          custom_value: false
    time_delay:
      name: Tiempo de espera
      description: ">`optional`\n\n 
        >Desfase horario respecto al amanecer para el encendido o apagado.\n 
        >Poner en negativo para adelantar la hora de encendido y en positivo para retrasarla.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO NATURAL**."
      default: 00:30:00
      selector:
        time: {}
    time_offset:
      name: Tiempo de adelanto
      description: ">`optional`\n\n
        >Desfase horario respecto al anochecer para el apagado o encendido.\n
        >Poner en negativo para adelantar la hora de encendido y en positivo para retrasarla.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO NATURAL**."
      default: '00:-30:00'
      selector:
        time: {}


    modo_nfc:
      name: Activar el **Modo NFC**.
      description: "`required`\n\n 
        Enciende y apaga las luces, según una o varias **Etiquetas NFC** seleccionadas."
      default: false
      selector:
        boolean: {}
    tag-id:
      name: Etiquetas NFC
      description: ">`optional`\n\n
        >El ID de etiqueta NFC.\n
        >Se puede encontrar en Configuración --> Etiquetas NFC y haciendo clic en la etiqueta NFC elegida.
        >OBLIGATORIO SI SE ACTIVA EL **MODO NFC**."
      selector:
        text:
          type: text
    solo_noche_nfc:
      name: Solo por la noche
      description: ">`optional`\n\n 
        >Enciende y apaga las luces, únicamente por la noche.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO NFC**."
      default: false
      selector:
        boolean: {}
    espera_nfc:
      name: "Espera encendidas"
      description: ">`optional`\n\n 
        >Tiempo que permanecen encendidas las luces desde la última **lectura** de la etiqueta NFC.\n
        >OBLIGATORIO SI SE ACTIVA EL **MODO NFC**."
      default: 00:01:00


    sensor_luminancia:
      name: Sensor de luminosidad
      description: "`optional`\n\n
        Entidad de medición de luminosidad.\n
        TIENE EFECTO EN TODOS LOS ESCENARIOS."
      default: []
      selector:
        entity:
          multiple: false
          filter:
          - device_class:
            - illuminance
    luminancia:
      name: Nivel máximo de Luminosidad (lux)
      description: ">`optional`\n\n
        >Nivel máximo de luminosidad (lux). Si la luminosidad medida es superior, las luces no se encenderán.\n
        >ÚNICAMENTE TIENE EFECTO SI SE SELECCIONA UN SENSOR DE LUMINOSIDAD."
      default: 300
      selector:
        number:
          min: 0
          max: 100000
          unit_of_measurement: lx
          mode: box
          step: 1


variables:


  activador: !input activador
  etiquetas_nfc: !input etiquetas_nfc
  luces: !input luces
  modo_sensor: !input modo_sensor
  modo_natural: !input modo_natural
  modo_nfc: !input modo_nfc
  sensor_luminancia: !input sensor_luminancia
  luminancia: !input luminancia
  solo_noche_sensor: !input solo_noche_sensor
  solo_noche_nfc: !input solo_noche_nfc


trigger:


- platform: state
  entity_id: !input activador
  to: 'on'
  id: activador_on
- platform: state
  entity_id: !input activador
  to: 'off'
  for: !input espera_sensor
  id: activador_off

- platform: sun
  event: sunrise
  offset: !input time_delay
  id: sunrise
- platform: sun
  event: sunset
  offset: !input time_offset
  id: sunset

- platform: tag
  tag_id: !input etiquetas_nfc
  id: nfc


condition:
  - condition: template
    value_template: >
      {{ (sensor_luminancia | length == 0) or
        (sensor_luminancia | length > 0 and
        states(sensor_luminancia) | float(0) <= luminancia | float(0)) }}

action:

  - if:
      - condition: (modo_sensor)
    then:
      - if:
          - condition: trigger
            id:
              - sunrise
        then:
          - service: light.turn_{{ iif (modo == "dia", "on", "off") }}
            target:
              entity_id: !input luces
      - if:
          - condition: trigger
            id:
              - sunset
        then:
          - service: light.turn_{{ iif (modo == "dia", "off", "on") }}
            target:
              entity_id: !input luces

  - if:
      - condition: (modo_natural)
    then:
      - if:
          - condition: trigger
            id:
              - activador_off
              - activador_on
        then:
          - if:
              - condition: template
                value_template: >
                  {{ ( not solo_noche_sensor) or 
                  (solo_noche_sensor and states('sun.sun') == 'below_horizon') }}
            then:
              - service: light.turn_{{ states(activador) }}
                data:
                  entity_id: '{{ luces }}'

  - if:
      - condition: (modo_nfc)
    then:
      - if:
          - condition: trigger
            id:
              - nfc
        then:
          - if:
              - condition: template
                value_template: >
                  {{ ( not solo_noche_sensor) or 
                  (solo_noche_sensor and states('sun.sun') == 'below_horizon') }}
            then:
              - service: light.turn_toggle
                data:
                  entity_id: '{{ luces }}'


mode: single
