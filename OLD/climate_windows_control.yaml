blueprint:
  name: MIO - Climate - Windows Control
  description: 
    "Turns off (if on) and returns to its previous state
    an climate device (thermostat, air conditioning...), depending on how they are opened
    or close a group of windows and/or doors. A delay can be programmed in the
    on/off, and an action after each change.\n\n

    ### Actions:\n\n

    > Optionally, one or more actions can be configured to be executed when windows are opened or closed.\n
    > For notification type actions (which will be the most common), the following variables are made available to compose the body of the message:\n\n
    > \ - ***{{ modo_anterior }}***: Previous mode (see below)\n\n

    ### Previous mode:\n\n

    You need to create an entity [***'input_select'***](https://www.home-assistant.io/docs/blueprint/selectors/#select-selector)
    with the possible states (***'hvac_mode'*** values) in which your air conditioner can be, to save the previous state,
    and be able to restore it when the windows are closed.\n\n

    **Version**: 2.1.0\n
    
    **Documentation:** We are working on it, but there is little more that can be said that has not already been said..."
  
  domain: automation
  source_url: https://github.com/EnriqueBesuman/blueprints/blob/main/climate_windows_control.yaml

  input:

    climatizador:
      name: Climate Entity
      description: "`required`\n\n
        The climate entity that will be in contact with the windows and/or doors."
      selector:
        entity:
          multiple: false
          filter:
          - domain: climate

    ventanas:
      name: Windows/Doors
      description: "`required`\n\n
        The window or door that controls the climate entity. If there are several, it is
        necessary to create a group."
      selector:
        entity:
          multiple: false
          filter:
          - domain: binary_sensor
            device_class: window
          - domain: binary_sensor
            device_class: door
#          - domain: group

    retraso_abrir:
      name: Delay Opening
      description: "`optional`\n\n
        Waiting time in seconds, from when the window opened until the climate entity is turned off."
      default: 30
      selector:
        number:
          min: 0.0
          max: 3600.0
          unit_of_measurement: seconds
          mode: box
          step: 1.0

    accion_abrir:
      name: Opening Actions
      description: "`optional`\n\n
        Actions to be executed when windows and/or doors are opened (e.g. sending a notification)."
      default: []
      selector:
        action: {}

    retraso_cerrar:
      name: Delay Closing
      description: "`optional`\n\n
        Waiting time in seconds, from when the window closed until the climate entity is turned off."
      default: 10
      selector:
        number:
          min: 0.0
          max: 3600.0
          unit_of_measurement: seconds
          mode: box
          step: 1.0

    accion_cerrar:
      name: Closing Actions
      description: "`optional`\n\n
        Actions to be executed when windows and/or doors are closed (e.g. sending a notification)."
      default: []
      selector:
        action: {}

    modo_anterior:
      name: Previous Mode
      description: "`required`\n\n
        Input Select to store the mode in which the climate entity was before turning it off.
        It is saved whenever the window is opened, even when the air conditioning is off."
      selector:
        entity:
          multiple: false
          filter:
          - domain: input_select

variables:

  accion_abrir: !input accion_abrir
  accion_cerrar: !input accion_cerrar
  climatizador: !input climatizador
  modo_anterior: !input modo_anterior
  
mode: single

trigger:

- platform: state
  entity_id: !input ventanas
  from: 'off'
  to: 'on'
  for: !input retraso_abrir
  id: abriendo
  
- platform: state
  entity_id: !input ventanas
  from: 'on'
  to: 'off'
  for: !input retraso_cerrar
  id: cerrando

action:

  - if:
      - condition: trigger
        id:
          - abriendo
    then:
      - service: input_select.set_options
        target:
          entity_id: !input modo_anterior
        data:
          options: '{{ states(climatizador) }}'
      - if: 
          - condition: not
            conditions:
            - condition: state
              entity_id: !input climatizador
              state: 'off'
        then:
          - service: climate.turn_off
            target:
              entity_id: !input climatizador
          - choose:
            - conditions: '{{ accion_abrir is defined and accion_abrir|length > 0 }}'
              sequence: !input accion_abrir

  - if:
      - condition: trigger
        id:
          - cerrando
    then:
      - if: 
          - condition: not
            conditions:
            - condition: state
              entity_id: !input modo_anterior
              state: 'off'
        then:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input climatizador
            data:
              hvac_mode: '{{ states(modo_anterior) }}'
          - choose:
            - conditions: '{{ accion_cerrar is defined and accion_cerrar|length > 0 }}'
              sequence: !input accion_cerrar